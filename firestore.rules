
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/roles_admin/$(userId));
    }

    // States: Public read, admin write
    match /states/{stateId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Destinations: Public read, admin write
    match /destinations/{destinationId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Hotels: Public read, admin write
    match /hotels/{hotelId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Transport Options: Authenticated read, admin write
    match /transport_options/{transportOptionId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Transport Hubs: Authenticated read, admin write
    match /transport_hubs/{transportHubId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Destination Hubs: Authenticated read, admin write
    match /destination_hubs/{destinationHubId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Destination Media: Authenticated read, admin write
    match /destination_media/{destinationMediaId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Admin Roles: Only admins can read/write other admin roles
    match /roles_admin/{userId} {
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
